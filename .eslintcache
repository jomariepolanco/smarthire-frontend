[{"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/App.js":"1","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Layout/Login.js":"2","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/users/actions.js":"3","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/users/actionTypes.js":"4","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Containers/CandidateContainer.js":"5","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Containers/HomeContainer.js":"6","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CreateCandidateForm.js":"7","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/sharedComponents/SearchForm.js":"8","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Components/JobCard.js":"9","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Components/Calendar.js":"10","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/NotesCard.js":"11","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CallCard.js":"12","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/CreateCallForm.js":"13","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Components/ProjectCard.js":"14","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Components/TaskCard.js":"15","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CandidateCard.js":"16","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/ClientList.js":"17","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/CreateClientForm.js":"18","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CreateApplicationForm.js":"19","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Containers/ProjectsContainer.js":"20","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Layout/Navbar.js":"21","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CandidateList.js":"22","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/CompanyCard.js":"23","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Components/CreateJobForm.js":"24","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/sharedComponents/Form.js":"25","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Containers/CallContainer.js":"26","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CreateCallForm.js":"27","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/CallCard.js":"28","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/applications/actions.js":"29","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/candidates/actions.js":"30","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/companies/actions.js":"31","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/jobs/actions.js":"32","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/projects/actions.js":"33","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/tasks/actions.js":"34","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/rootReducer.js":"35","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/companies/clientsReducer.js":"36","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/NotesCard.js":"37","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Containers/ApplicationContainer.js":"38","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Components/AppCard.js":"39","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Containers/CallContainer.js":"40","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Containers/JobsContainer.js":"41","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/candidates/candidatesReducer.js":"42","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/projects/actionTypes.js":"43","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/users/usersReducer.js":"44","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Containers/ClientContainer.js":"45","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/index.js":"46","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/applications/applicationsReducer.js":"47","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/projects/projectsReducer.js":"48","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/tasks/tasksReducer.js":"49","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/candidates/actionTypes.js":"50","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/jobs/actionTypes.js":"51","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Layout/Signup.js":"52","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Layout/Logout.js":"53","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/companies/actionTypes.js":"54","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/jobs/jobsReducer.js":"55","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/applications/actionTypes.js":"56","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/tasks/actionTypes.js":"57","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Components/CreateProjectForm.js":"58","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Containers/ApplicationContainer.js":"59","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/IndustrySearchForm.js":"60","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/ApplicationSearchForm.js":"61"},{"size":1998,"mtime":1611601705672,"results":"62","hashOfConfig":"63"},{"size":1337,"mtime":1611099661627,"results":"64","hashOfConfig":"63"},{"size":1739,"mtime":1611010052685,"results":"65","hashOfConfig":"63"},{"size":160,"mtime":1611010052684,"results":"66","hashOfConfig":"63"},{"size":4476,"mtime":1611600946108,"results":"67","hashOfConfig":"63"},{"size":1044,"mtime":1611414708573,"results":"68","hashOfConfig":"63"},{"size":3649,"mtime":1611099661620,"results":"69","hashOfConfig":"63"},{"size":593,"mtime":1611600946115,"results":"70","hashOfConfig":"63"},{"size":717,"mtime":1611099661626,"results":"71","hashOfConfig":"63"},{"size":4662,"mtime":1611601755130,"results":"72","hashOfConfig":"63"},{"size":1652,"mtime":1611600946111,"results":"73","hashOfConfig":"63"},{"size":402,"mtime":1611600946106,"results":"74","hashOfConfig":"63"},{"size":2453,"mtime":1611600946110,"results":"75","hashOfConfig":"63"},{"size":905,"mtime":1611099661624,"results":"76","hashOfConfig":"63"},{"size":1001,"mtime":1611099661624,"results":"77","hashOfConfig":"63"},{"size":4639,"mtime":1611442220182,"results":"78","hashOfConfig":"63"},{"size":944,"mtime":1611600946109,"results":"79","hashOfConfig":"63"},{"size":2889,"mtime":1611600946110,"results":"80","hashOfConfig":"63"},{"size":3213,"mtime":1611600946107,"results":"81","hashOfConfig":"63"},{"size":3624,"mtime":1611600946114,"results":"82","hashOfConfig":"63"},{"size":1789,"mtime":1611511144891,"results":"83","hashOfConfig":"63"},{"size":930,"mtime":1611600946106,"results":"84","hashOfConfig":"63"},{"size":3437,"mtime":1611099661622,"results":"85","hashOfConfig":"63"},{"size":2030,"mtime":1611099661626,"results":"86","hashOfConfig":"63"},{"size":905,"mtime":1611099661652,"results":"87","hashOfConfig":"63"},{"size":969,"mtime":1611600946112,"results":"88","hashOfConfig":"63"},{"size":2565,"mtime":1611099661620,"results":"89","hashOfConfig":"63"},{"size":385,"mtime":1611600946109,"results":"90","hashOfConfig":"63"},{"size":573,"mtime":1611010052681,"results":"91","hashOfConfig":"63"},{"size":2259,"mtime":1611075273273,"results":"92","hashOfConfig":"63"},{"size":2940,"mtime":1611099661629,"results":"93","hashOfConfig":"63"},{"size":433,"mtime":1611075273277,"results":"94","hashOfConfig":"63"},{"size":1130,"mtime":1611434403901,"results":"95","hashOfConfig":"63"},{"size":1697,"mtime":1611596988657,"results":"96","hashOfConfig":"63"},{"size":711,"mtime":1611010052683,"results":"97","hashOfConfig":"63"},{"size":1190,"mtime":1611075273275,"results":"98","hashOfConfig":"63"},{"size":1632,"mtime":1611600946107,"results":"99","hashOfConfig":"63"},{"size":449,"mtime":1610933767443,"results":"100","hashOfConfig":"63"},{"size":647,"mtime":1611152605699,"results":"101","hashOfConfig":"63"},{"size":1021,"mtime":1611600946108,"results":"102","hashOfConfig":"63"},{"size":1017,"mtime":1611099661627,"results":"103","hashOfConfig":"63"},{"size":937,"mtime":1610895638158,"results":"104","hashOfConfig":"63"},{"size":119,"mtime":1611434409641,"results":"105","hashOfConfig":"63"},{"size":490,"mtime":1611010052685,"results":"106","hashOfConfig":"63"},{"size":3985,"mtime":1611600946113,"results":"107","hashOfConfig":"63"},{"size":590,"mtime":1611099661630,"results":"108","hashOfConfig":"63"},{"size":333,"mtime":1610974417866,"results":"109","hashOfConfig":"63"},{"size":416,"mtime":1611601575808,"results":"110","hashOfConfig":"63"},{"size":630,"mtime":1610997297762,"results":"111","hashOfConfig":"63"},{"size":256,"mtime":1610907756476,"results":"112","hashOfConfig":"63"},{"size":90,"mtime":1611099661629,"results":"113","hashOfConfig":"63"},{"size":1687,"mtime":1611099661629,"results":"114","hashOfConfig":"63"},{"size":654,"mtime":1611600946115,"results":"115","hashOfConfig":"63"},{"size":376,"mtime":1611075273274,"results":"116","hashOfConfig":"63"},{"size":375,"mtime":1611099661630,"results":"117","hashOfConfig":"63"},{"size":56,"mtime":1611442048376,"results":"118","hashOfConfig":"63"},{"size":136,"mtime":1610997182123,"results":"119","hashOfConfig":"63"},{"size":3199,"mtime":1611600946113,"results":"120","hashOfConfig":"63"},{"size":759,"mtime":1611600946108,"results":"121","hashOfConfig":"63"},{"size":822,"mtime":1611600946111,"results":"122","hashOfConfig":"63"},{"size":645,"mtime":1611600946106,"results":"123","hashOfConfig":"63"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10262d5",{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"128"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/App.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Layout/Login.js",[],["253","254"],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/users/actions.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/users/actionTypes.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Containers/CandidateContainer.js",["255"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { getCandidates, updateCandidate } from '../../Redux/candidates/actions'\nimport CandidateCard from '../Components/CandidateCard'\nimport CandidateList from '../Components/CandidateList'\nimport CreateCandidateForm from '../Components/CreateCandidateForm'\nimport SearchForm from '../../sharedComponents/SearchForm'\nimport { getJobs } from '../../Redux/jobs/actions'\nimport { Card } from 'semantic-ui-react'\nimport ApplicationSearchForm from '../Components/ApplicationSearchForm'\n\nclass CandidateContainer extends Component {\n\n    state = {\n        searchedCandies: '',\n    }\n\n    componentDidMount(){\n        this.props.getCandidates()\n        this.props.getJobs()\n    }\n\n    searchFormOnChange = (value) => {\n        this.setState({searchedCandies: value})\n    }\n\n    renderCandyList = () => {\n        let searchedCandies;\n        if (this.state.searchedCandies.includes('green') || this.state.searchedCandies.includes('red') || this.state.searchedCandies.includes('yellow')){\n            searchedCandies = [...this.props.candidates].filter(candy => {\n                if (this.state.searchedCandies.toLowerCase() === 'green'){\n                    return candy.applications.some(app => app.green)\n                } else if (this.state.searchedCandies.toLowerCase() === 'yellow'){\n                    return candy.applications.some(app => app.yellow)\n                } else if (this.state.searchedCandies.toLowerCase() === 'red'){\n                    return candy.applications.some(app => app.red)\n                }\n            })\n        } else {\n            searchedCandies = [...this.props.candidates].filter(candy => candy.firstName.toLowerCase().includes(this.state.searchedCandies.toLowerCase()) || candy.lastName.toLowerCase().includes(this.state.searchedCandies.toLowerCase()))\n        }\n\n        if (this.state.searchedCandies === ''){\n            return null\n        } else {\n            return searchedCandies\n        }\n    }\n\n    // appSearchHandler = (color) => {\n        \n    //     debugger\n    //     this.setState({searched: searched})\n    //     }\n\n    updateCandidateHandler = (candyId, updateObj) => {\n        this.props.updateCandidate(candyId, updateObj)\n    }\n\n\n    render() {\n        return (\n            <>\n            {this.props.user ?\n                <Switch>\n                    <Route path='/candidates/:id' render={({match}) => {\n                        let id = +match.params.id \n\n                        let candidate = [...this.props.candidates].find(candy => candy.id === id)\n                        return <CandidateCard candidate={candidate} updateCandidate={this.updateCandidateHandler} />\n                    }} />\n\n                    <Route path='/candidates' render={(routerProps) => {\n                        return (\n                            <div>\n                                <Card fluid>\n                                    <SearchForm \n                                    changeHandler={this.searchFormOnChange} searchValue={this.state.searchedCandies}/>\n                                </Card>\n                                <Card fluid>\n                                    <ApplicationSearchForm changeHandler={this.searchFormOnChange} searchValue={this.state.searchedCandies} />\n                                </Card>\n                                <Card fluid>\n                                    <CandidateList candidates={this.renderCandyList()} />\n                                </Card>\n                                <Card fluid>\n                                    <CreateCandidateForm history={routerProps.history} />\n                                </Card>\n                            </div>\n\n                        )\n                    }} />\n            </Switch>\n        \n        \n            :\n            \n            \n            <Redirect to='/login' />\n            \n            \n            \n            }\n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        candidates: state.candidates,\n        user: state.user\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        getCandidates: () => dispatch(getCandidates()),\n        updateCandidate: (candidateId, updateObj) => dispatch(updateCandidate(candidateId, updateObj)),\n        getJobs: () => dispatch(getJobs())\n    }\n}\n\nexport default connect(msp, mdp)(CandidateContainer);","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Containers/HomeContainer.js",["256"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { getProjects } from '../../Redux/projects/actions'\nimport Calendar from '../Components/Calendar'\nimport styled from 'styled-components'\n\nclass HomeContainer extends Component {\n\n    componentDidMount(){\n        if (this.props.user){\n            this.props.getProjects(this.props.user.id)\n\n        }\n    }\n\n    render() {\n        return (\n            <>\n            {this.props.user ?\n                <>\n                <div>\n                    <Calendar history={this.props.routerProps.history} />\n                </div>\n                </>\n        \n            :\n        \n                <Redirect to='/login' />\n        \n            }   \n\n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        user: state.user \n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        getProjects: (userId) => dispatch(getProjects(userId))\n    }\n}\n\nexport default connect(msp, mdp)(HomeContainer);\n\n","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CreateCandidateForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/sharedComponents/SearchForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Components/JobCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Components/Calendar.js",["257"],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/NotesCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CallCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/CreateCallForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Components/ProjectCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Components/TaskCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CandidateCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/ClientList.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/CreateClientForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CreateApplicationForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Containers/ProjectsContainer.js",["258"],"import React, { Component } from 'react'\nimport ProjectCard from '../Components/ProjectCard'\nimport {Card, Grid, Item} from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport {createTask, getProjectsTasks} from '../../Redux/tasks/actions'\nimport CreateProjectForm from '../Components/CreateProjectForm'\n\nclass ProjectsContainer extends Component {\n\n    componentDidMount(){\n        const candidate = [...this.props.projects].find(pro => pro.title === \"Candidate\")\n\n        const client = [...this.props.projects].find(pro => pro.title === \"Client\")\n\n        const tasks = [...this.props.tasks].filter(task => task.projectId === candidate.id || task.projectId === client.id)\n        if (tasks.length <= 0){\n          //find last candidate call\n          let lastCandiesCall = [...this.props.candidates].map(candy => [new Date(Math.max(...candy.calls.map(e => new Date(e.date)))), candy.id])\n            \n          lastCandiesCall.forEach(call => {\n              if (((new Date().getTime() - call[0].getTime()) / (1000 * 3600 * 24)) >= 60){\n                  //create task\n                  const candyTaskObj = {\n                      archived: false,\n                      date: new Date().toDateString(),\n                      project_id: candidate.id,\n                      content: `Call ${this.props.candidates.find(candy => candy.id === call[1]).firstName + ' ' + this.props.candidates.find(candy => candy.id === call[1]).lastName} for 60+ day check`\n                  }\n                  this.props.createTask(candyTaskObj)\n              }\n          })\n            //find last client call\n            let lastClientsCall = [...this.props.companies].map(co => [new Date(Math.max(...co.calls.map(e => new Date(e.date)))), co.id])\n\n            lastClientsCall.forEach(call => {\n                if (((new Date().getTime() - call[0].getTime()) / (1000 * 3600 * 24)) >= 60){\n                    const coTaskObj = {\n                        archived: false,\n                        date: new Date().toDateString(),\n                        project_id: client.id,\n                        content: `Call ${this.props.companies.find(co => co.id === call[1]).name} for 60+ day check`\n                    }\n                    this.props.createTask(coTaskObj)\n                }\n            })\n        }\n    }\n\n    renderProjects = () => {\n        return [...this.props.projects].map(project => {\n            const tasks = [...this.props.tasks].filter(task => task.projectId === project.id)\n            return(\n                <Grid.Row key={project.id} columns={1}>\n                    <Grid.Column>\n                    <Card centered fluid>\n                <Item>\n                    <Card.Header as='h1' textAlign='center'>\n                        {project.title}\n                    </Card.Header>\n                    <Card.Content>\n                        <ProjectCard project={project} tasks={tasks}/>\n                    </Card.Content>\n                </Item>\n            </Card>\n                    </Grid.Column>\n                </Grid.Row>\n            )\n        })\n    }\n    render() {\n        console.log(this.props.tasks, this.props.projects)\n        return (\n            <div>\n                <CreateProjectForm />\n                <Grid divided='vertically'>\n                    {this.renderProjects()}\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        tasks: state.tasks \n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        createTask: (taskObj) => dispatch(createTask(taskObj))\n    }\n}\n\nexport default connect(msp, mdp)(ProjectsContainer);","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Layout/Navbar.js",["259"],"import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { Menu } from 'semantic-ui-react'\nimport styled from 'styled-components'\nimport Logout from './Logout'\n\nexport default class Navbar extends Component {\n\n    state = {\n        activeItem: ''\n    }\n\n    handleItemClick = (e, {name}) => this.setState({activeItem: name})\n\n\n    render() {\n        const {activeItem} = this.state\n        return (\n            <Menu secondary>\n                    <Menu.Item name='home' active={activeItem === 'home'}\n                    onClick={this.handleItemClick}\n                    as={NavLink} to='/home'>\n                            Home \n                    </Menu.Item>\n                    <Menu.Item name='candidates' active={activeItem === 'candidates'} onClick={this.handleItemClick} as={NavLink} to='/candidates'>\n                            Candidates\n                    </Menu.Item>\n                    <Menu.Item name='clients' active={activeItem === 'clients'} onClick={this.handleItemClick} as={NavLink} to='/clients'>\n                            Clients\n                    </Menu.Item>\n                    <Menu.Item position='right'>\n                        <Menu.Item name='login' active={activeItem === 'login'} onClick={this.handleItemClick} as={NavLink} to='/login'>\n                                Login\n                        </Menu.Item>\n                        <Menu.Item name='signup' active={activeItem === 'signup'} onClick={this.handleItemClick} as={NavLink} to='/signup'>\n                                Sign Up\n                        </Menu.Item>\n                        <Menu.Item>\n                            <Logout />\n                        </Menu.Item>\n                    </Menu.Item>\n            </Menu>\n        )\n    }\n}\n\n","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CandidateList.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/CompanyCard.js",["260","261","262"],"import React, { Component } from 'react'\nimport CallContainer from '../Containers/CallContainer'\nimport Form from '../../sharedComponents/Form'\nimport NotesCard from './NotesCard'\nimport { NavLink } from 'react-router-dom'\nimport JobsContainer from '../../Jobs/Containers/JobsContainer'\nimport { connect } from 'react-redux'\nimport { createJob } from '../../Redux/companies/actions'\n\n\nclass CompanyCard extends Component {\n\n\n    state= {\n        name: this.props.company.name,\n        address: this.props.company.address,\n        industry: this.props.company.industry,\n        poc_name: this.props.company.pocName,\n        poc_email: this.props.company.pocEmail,\n        poc_number: this.props.company.pocNumber\n    }\n\n    changeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    submitHandler = (updateObj) => {\n        this.props.updateCompany(this.props.company.id, updateObj)\n    }\n\n    createJobFormSubmitHandler = (newObj) => {\n        this.props.createJob(newObj)\n    }\n\n    render() {\n        console.log(this.props.companies, this.props.company)\n        return (\n            <div>\n                <h1>{this.props.company.name}</h1>\n                <Form value={this.state.name} name=\"name\" changeHandler={this.changeHandler} placeholder=\"Name\" submitHandler={this.submitHandler}/>\n                <Form value={this.state.industry} name=\"industry\" changeHandler={this.changeHandler} placeholder=\"Industry\" submitHandler={this.submitHandler}/>\n                <Form value={this.state.address} name=\"address\" changeHandler={this.changeHandler} placeholder=\"Address\" submitHandler={this.submitHandler}/>\n                <Form value={this.state.poc_name} name=\"poc_name\" changeHandler={this.changeHandler} placeholder=\"Point of Contact Name\" submitHandler={this.submitHandler}/>\n                <Form value={this.state.poc_email} name=\"poc_email\" changeHandler={this.changeHandler} placeholder=\"Point of Contact Email\" submitHandler={this.submitHandler}/>\n                <Form value={this.state.poc_number} name=\"poc_number\" changeHandler={this.changeHandler} placeholder=\"Point of Contact Phone Number\" submitHandler={this.submitHandler}/>\n\n                <CallContainer company={this.props.company} calls={this.props.company.calls}/>\n\n                <NotesCard company={this.props.company} notes={this.props.company.notes} />\n\n                <JobsContainer submitHandler={this.createJobFormSubmitHandler} company={this.props.company} jobs={this.props.company.jobs} />\n            </div>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        companies: state.companies\n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        createJob: (newObj) => dispatch(createJob(newObj))\n    }\n}\n\nexport default connect(msp, mdp)(CompanyCard);","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Components/CreateJobForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/sharedComponents/Form.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Containers/CallContainer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/CreateCallForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/CallCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/applications/actions.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/candidates/actions.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/companies/actions.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/jobs/actions.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/projects/actions.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/tasks/actions.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/rootReducer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/companies/clientsReducer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/NotesCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Containers/ApplicationContainer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Components/AppCard.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Containers/CallContainer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Jobs/Containers/JobsContainer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/candidates/candidatesReducer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/projects/actionTypes.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/users/usersReducer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Containers/ClientContainer.js",["263","264"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport SearchForm from '../../sharedComponents/SearchForm'\nimport {createJob, getCompanies, updateCompany} from '../../Redux/companies/actions'\nimport ClientList from '../Components/ClientList';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport CompanyCard from '../Components/CompanyCard';\nimport CreateClientForm from '../Components/CreateClientForm';\nimport JobCard from '../../Jobs/Components/JobCard';\nimport { getJobs } from '../../Redux/jobs/actions';\nimport { Card, Segment } from 'semantic-ui-react';\nimport IndustrySearchForm from '../Components/IndustrySearchForm';\n\n\nclass ClientContainer extends Component {\n\n    state = {\n        searchedCompanies: ''\n    }\n\n    componentDidMount(){\n        this.props.getCompanies()\n        this.props.getJobs()\n    }\n\n    searchFormList = () => {\n        const searchedCompanies = [...this.props.companies].filter(co => co.name.toLowerCase().includes(this.state.searchedCompanies.toLowerCase()) || co.industry.toLowerCase().includes(this.state.searchedCompanies.toLowerCase()))\n\n        if (this.state.searchedCompanies === '') {\n            return null\n        } else {\n            return searchedCompanies\n        }\n\n    }\n\n    searchFormOnChange = (value) => {\n        this.setState({searchedCompanies: value})\n    }\n\n    industryFormSubmit = (industry) => {\n        const searched = [...this.props.companies].filter(co => co.industry.toLowerCase().includes(industry.toLowerCase()))\n        this.setState({searchedCompanies: searched})\n    }\n\n    updateCompanyHandler = (companyId, updateObj) => {\n        this.props.updateCompany(companyId, updateObj)\n    }\n\n    createJobFormSubmitHandler = (newObj) => {\n        this.props.createJob(newObj)\n    }\n\n    render() {\n        console.log(this.props.jobs)\n        return (\n            <>\n            {this.props.user ?\n            \n            <Switch>\n                <Route path='/clients/:id/jobs/:jobId' render={({match}) => {\n                    let id = +match.params.jobId\n                    let job = [...this.props.jobs].find(job => job.id === id)\n                    return <JobCard job={job} />\n                }} />\n\n                <Route path='/clients/:id' render={({match}) => {\n                    let id = +match.params.id \n                    let company = [...this.props.companies].find(co => co.id === id)\n                    return <CompanyCard createJobSubmitHandler={this.createJobFormSubmitHandler} company={company} updateCompany={this.updateCompanyHandler}/>\n                }} />\n\n                <Route path='/clients' render={(routerProps) => {\n                    return (\n                        <div>\n                            <Segment basic>\n                                <SearchForm changeHandler={this.searchFormOnChange} searchValue={this.state.searchedCompanies}/>\n                            </Segment>\n                            <Segment basic>\n                                <ClientList clients={this.searchFormList()} />\n                            </Segment>\n                            <Segment basic>\n                                <CreateClientForm history={routerProps.history} />\n                            </Segment>\n                        </div>\n\n                    )\n                }} />\n            </Switch>\n            :\n            \n            <Redirect to='/login' />\n            \n            }\n                \n            </>\n        )\n    }\n}\n\nconst msp = (state) => {\n    return {\n        companies: state.companies,\n        jobs: state.jobs,\n        user: state.user \n    }\n}\n\nconst mdp = (dispatch) => {\n    return {\n        getCompanies: () => dispatch(getCompanies()),\n        updateCompany: (coId, updateObj) => dispatch(updateCompany(coId, updateObj)),\n        getJobs: () => dispatch(getJobs()),\n        createJob: (obj) => dispatch(createJob(obj))\n    }\n}\nexport default connect(msp, mdp)(ClientContainer);\n","/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/index.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/applications/applicationsReducer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/projects/projectsReducer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/tasks/tasksReducer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/candidates/actionTypes.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/jobs/actionTypes.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Layout/Signup.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Layout/Logout.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/companies/actionTypes.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/jobs/jobsReducer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/applications/actionTypes.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Redux/tasks/actionTypes.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Home/Components/CreateProjectForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Containers/ApplicationContainer.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Clients/Components/IndustrySearchForm.js",[],"/Users/joeyp/Development/Flatiron/code/mod5/smarthire/smarthire-frontend/src/Candidates/Components/ApplicationSearchForm.js",[],{"ruleId":"265","replacedBy":"266"},{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","severity":1,"message":"270","line":31,"column":71,"nodeType":"271","messageId":"272","endLine":31,"endColumn":73},{"ruleId":"273","severity":1,"message":"274","line":6,"column":8,"nodeType":"275","messageId":"276","endLine":6,"endColumn":14},{"ruleId":"273","severity":1,"message":"274","line":10,"column":8,"nodeType":"275","messageId":"276","endLine":10,"endColumn":14},{"ruleId":"273","severity":1,"message":"277","line":5,"column":21,"nodeType":"275","messageId":"276","endLine":5,"endColumn":37},{"ruleId":"273","severity":1,"message":"274","line":4,"column":8,"nodeType":"275","messageId":"276","endLine":4,"endColumn":14},{"ruleId":"273","severity":1,"message":"278","line":5,"column":10,"nodeType":"275","messageId":"276","endLine":5,"endColumn":17},{"ruleId":"273","severity":1,"message":"279","line":8,"column":10,"nodeType":"275","messageId":"276","endLine":8,"endColumn":19},{"ruleId":"273","severity":1,"message":"280","line":9,"column":9,"nodeType":"275","messageId":"276","endLine":9,"endColumn":16},{"ruleId":"273","severity":1,"message":"281","line":11,"column":10,"nodeType":"275","messageId":"276","endLine":11,"endColumn":14},{"ruleId":"273","severity":1,"message":"282","line":12,"column":8,"nodeType":"275","messageId":"276","endLine":12,"endColumn":26},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'getProjectsTasks' is defined but never used.","'NavLink' is defined but never used.","'createJob' is defined but never used.","'getJobs' is defined but never used.","'Card' is defined but never used.","'IndustrySearchForm' is defined but never used.","no-global-assign","no-unsafe-negation"]